/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ujaalo;

import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.awt.Toolkit;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import oracle.jdbc.OraclePreparedStatement;
import oracle.jdbc.OracleResultSet;

/**
 *
 * @author Kshitij Bajagain
 */
public class EventAlter extends javax.swing.JFrame {

    /**
     * Creates new form EventAlter
     */
    
    Connection conn=null;
    OraclePreparedStatement pst=null;
    OracleResultSet rs = null;
    
    
    public EventAlter() {
        initComponents();
        EventInformation();
    }
    
    
    
    public void bookValidation(){
        
        //Seats.getText()
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    
    
    public void EventInformation(){
    
    DefaultTableModel table = new DefaultTableModel();
   
   
    
    table.addColumn("Event ID");
    table.addColumn("Event Name");
    table.addColumn("Category");
    table.addColumn("Description");
    table.addColumn("Venue");
    table.addColumn("Event Date");
    table.addColumn("Total Seats");
     table.addColumn("Price Rate");
     
     
     
    
    conn = OracleDatabase.ConnectDb();
    try
    {
        //conn = OracleDatabase.ConnectDb();
        String sql = "SELECT EventID,EventsName,Category,Description,Venue,EventDate,NoOfSeats,PriceRate FROM Events";
        
        pst = (OraclePreparedStatement) conn.prepareStatement(sql);
        
        
        rs =(OracleResultSet) pst.executeQuery();
        
        //ResultSet R = S.executeQuery(sql);
        
        while(rs.next()){
            table.addRow(new Object[] // this is a object of our manual table which has function like addRow/addColumn DefaultTableModel table = new DefaultTableModel();
            
            {
                rs.getString(1),
                rs.getString(2),
                rs.getString(3),
                rs.getString(4),
                rs.getString(5),
                rs.getString(6),
                rs.getString(7),
                rs.getString(8),
               
            });
        }
        EventsList.setModel(table);
        EventsList.setShowHorizontalLines(true); 
        EventsList.setGridColor(Color.white);  //This will give us manual sequence color
        
        
        
        
        
        
    }catch(Exception e){
        
    }
   
}
    
    
    
    
    
    
    public void EventDelete(){
        
         String EventID=EID.getText();
        conn = OracleDatabase.ConnectDb();

     
        try{
            String deleteOracle = "DELETE FROM Events WHERE EventID=?";
                    
          //UPDATE Student SET Password=? WHERE UniversityID=?"
            
            pst = (OraclePreparedStatement) conn.prepareStatement(deleteOracle);
            
             pst.setString(1, EventID);

            rs =(OracleResultSet) pst.executeQuery();

            if (rs.next())
            {
                JOptionPane.showMessageDialog(null,"Delete of selected event Successful.Note that you will loss the Event and its whole details.");

                
            }

            else
            {
                JOptionPane.showMessageDialog(null,"Delete of Event Unsuccessful");
            }

        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        
    }
     
     
    public void DeleteSElectedBookingInfo(){
      String EventID=EID.getText();
        conn = OracleDatabase.ConnectDb();

     
        try{
            String deleteOracle = "DELETE FROM Booking WHERE EventID=?";
                    
          //UPDATE Student SET Password=? WHERE UniversityID=?"
            
            pst = (OraclePreparedStatement) conn.prepareStatement(deleteOracle);
            
             pst.setString(1, EventID);

            rs =(OracleResultSet) pst.executeQuery();
      
           

        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        
     
     
     }
    
    
    
    public void UpdateEvent(){
        String EventID=EID.getText();
        conn = OracleDatabase.ConnectDb();

     
        try{
            String sql2 = "UPDATE Events SET EventsName=?,Category=?,Description=?,  Venue=?, EventDate=?, NoOfSeats=?  WHERE EventID=?";
                    
          //UPDATE Student SET Password=? WHERE UniversityID=?"
            
            pst = (OraclePreparedStatement) conn.prepareStatement(sql2);
            
            
           
            pst.setString(1,EventName.getText());
            
            String value=Category.getSelectedItem().toString();
            
            pst.setString(2, value);
            
            pst.setString(3,Description.getText());
            
            pst.setString(4,Venue.getText());
           
            pst.setString(5,EventDate.getText());
            
            
            pst.setString(6, Seats.getText());
            
             pst.setString(7, EventID);

            rs =(OracleResultSet) pst.executeQuery();

            if (rs.next())
            {
                JOptionPane.showMessageDialog(null,"Update of selected event Successful.");

                
            }

            else
            {
                JOptionPane.showMessageDialog(null,"Adding Events  Unsuccessful.Please fill the  form carefully!!");
            }

        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        
    }
    
    
    
    public void FetchDataFromTable(){
      
        
        // get the model from the jtable
        DefaultTableModel model = (DefaultTableModel)EventsList.getModel();

        // get the selected row index
        int selectedRowIndex = EventsList.getSelectedRow();

        // set the selected row data into jtextfields
        EID.setText(model.getValueAt(selectedRowIndex, 0).toString());
        EventName.setText(model.getValueAt(selectedRowIndex, 1).toString());
        Rate.setText(model.getValueAt(selectedRowIndex,7).toString());
        Description.setText(model.getValueAt(selectedRowIndex, 3).toString());
        Venue.setText(model.getValueAt(selectedRowIndex, 4).toString());
        Seats.setText(model.getValueAt(selectedRowIndex, 6).toString());
        
        
    }
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AlterEvents = new javax.swing.JPanel();
        lblAlterEvents = new javax.swing.JLabel();
        BackPanel = new javax.swing.JPanel();
        minimize = new javax.swing.JLabel();
        lbl_EventName = new javax.swing.JLabel();
        lbl_Category = new javax.swing.JLabel();
        lbl_Venue = new javax.swing.JLabel();
        lbl_Date = new javax.swing.JLabel();
        btn_events = new javax.swing.JButton();
        lbl_Description = new javax.swing.JLabel();
        Category = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        Description = new javax.swing.JTextArea();
        Venue = new javax.swing.JTextField();
        Separator2 = new javax.swing.JSeparator();
        EventDate = new datechooser.beans.DateChooserCombo();
        lbl_TotalSeats = new javax.swing.JLabel();
        lbl_validate1 = new javax.swing.JLabel();
        btn_upadteEvents = new javax.swing.JButton();
        Separator3 = new javax.swing.JSeparator();
        Seats = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        EventsList = new javax.swing.JTable();
        EventName = new javax.swing.JTextField();
        Separator4 = new javax.swing.JSeparator();
        lbl_UniversityID1 = new javax.swing.JLabel();
        EID = new javax.swing.JTextField();
        Rate = new javax.swing.JTextField();
        UniversityIDSeparator5 = new javax.swing.JSeparator();
        lbl_enrolledCourse2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(null);
        setUndecorated(true);

        AlterEvents.setBackground(new java.awt.Color(255, 255, 255));
        AlterEvents.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(51, 51, 51)));
        AlterEvents.setMaximumSize(new java.awt.Dimension(1211, 626));
        AlterEvents.setMinimumSize(new java.awt.Dimension(1211, 626));
        AlterEvents.setPreferredSize(new java.awt.Dimension(1211, 626));

        lblAlterEvents.setFont(new java.awt.Font("Tahoma", 1, 32)); // NOI18N
        lblAlterEvents.setForeground(new java.awt.Color(214, 48, 49));
        lblAlterEvents.setText("Alter Events");

        BackPanel.setBackground(new java.awt.Color(214, 48, 49));

        minimize.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        minimize.setForeground(new java.awt.Color(255, 255, 255));
        minimize.setText("X");
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout BackPanelLayout = new javax.swing.GroupLayout(BackPanel);
        BackPanel.setLayout(BackPanelLayout);
        BackPanelLayout.setHorizontalGroup(
            BackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(minimize)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        BackPanelLayout.setVerticalGroup(
            BackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(minimize)
                .addContainerGap())
        );

        lbl_EventName.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        lbl_EventName.setForeground(new java.awt.Color(214, 48, 49));
        lbl_EventName.setText("Event Name ");

        lbl_Category.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        lbl_Category.setForeground(new java.awt.Color(214, 48, 49));
        lbl_Category.setText("Category");

        lbl_Venue.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        lbl_Venue.setForeground(new java.awt.Color(214, 48, 49));
        lbl_Venue.setText("Event Venue");

        lbl_Date.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        lbl_Date.setForeground(new java.awt.Color(214, 48, 49));
        lbl_Date.setText("Event Date");

        btn_events.setBackground(new java.awt.Color(214, 48, 49));
        btn_events.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        btn_events.setForeground(new java.awt.Color(255, 255, 255));
        btn_events.setText("Delete");
        btn_events.setBorder(null);
        btn_events.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eventsActionPerformed(evt);
            }
        });

        lbl_Description.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        lbl_Description.setForeground(new java.awt.Color(214, 48, 49));
        lbl_Description.setText("Description");

        Category.setBackground(new java.awt.Color(255, 255, 255));
        Category.setEditable(true);
        Category.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Category.setForeground(new java.awt.Color(102, 102, 102));
        Category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Campus", "Community" }));
        Category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CategoryActionPerformed(evt);
            }
        });

        Description.setBackground(new java.awt.Color(255, 255, 255));
        Description.setColumns(20);
        Description.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Description.setForeground(new java.awt.Color(102, 102, 102));
        Description.setLineWrap(true);
        Description.setRows(5);
        Description.setWrapStyleWord(true);
        Description.setBorder(null);
        jScrollPane1.setViewportView(Description);

        Venue.setBackground(new java.awt.Color(255, 255, 255));
        Venue.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        Venue.setForeground(new java.awt.Color(102, 102, 102));
        Venue.setBorder(null);
        Venue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                VenueKeyPressed(evt);
            }
        });

        Separator2.setBackground(new java.awt.Color(153, 153, 153));
        Separator2.setForeground(new java.awt.Color(51, 51, 51));
        Separator2.setMaximumSize(new java.awt.Dimension(261, 24));
        Separator2.setMinimumSize(new java.awt.Dimension(261, 24));
        Separator2.setPreferredSize(new java.awt.Dimension(261, 24));

        EventDate.setCurrentView(new datechooser.view.appearance.AppearancesList("Swing",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(222, 222, 222),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(222, 222, 222),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(255, 51, 51),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(222, 222, 222),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    EventDate.setCalendarBackground(new java.awt.Color(255, 255, 255));
    EventDate.setCalendarPreferredSize(new java.awt.Dimension(376, 330));
    try {
        EventDate.setDefaultPeriods(new datechooser.model.multiple.PeriodSet(new datechooser.model.multiple.Period(new java.util.GregorianCalendar(2019, 3, 23),
            new java.util.GregorianCalendar(2019, 3, 23))));
} catch (datechooser.model.exeptions.IncompatibleDataExeption e1) {
    e1.printStackTrace();
    }
    EventDate.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.BOLD, 15));
    EventDate.setNavigateFont(new java.awt.Font("Serif", java.awt.Font.PLAIN, 10));

    lbl_TotalSeats.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
    lbl_TotalSeats.setForeground(new java.awt.Color(214, 48, 49));
    lbl_TotalSeats.setText("Total Seats");

    lbl_validate1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    lbl_validate1.setForeground(new java.awt.Color(255, 0, 51));
    lbl_validate1.setText("*One or more required information is empty.");

    btn_upadteEvents.setBackground(new java.awt.Color(214, 48, 49));
    btn_upadteEvents.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
    btn_upadteEvents.setForeground(new java.awt.Color(255, 255, 255));
    btn_upadteEvents.setText("Update");
    btn_upadteEvents.setBorder(null);
    btn_upadteEvents.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btn_upadteEventsActionPerformed(evt);
        }
    });

    Separator3.setBackground(new java.awt.Color(153, 153, 153));
    Separator3.setForeground(new java.awt.Color(51, 51, 51));
    Separator3.setMaximumSize(new java.awt.Dimension(261, 24));
    Separator3.setMinimumSize(new java.awt.Dimension(261, 24));
    Separator3.setPreferredSize(new java.awt.Dimension(261, 24));

    Seats.setBackground(new java.awt.Color(255, 255, 255));
    Seats.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
    Seats.setForeground(new java.awt.Color(102, 102, 102));
    Seats.setBorder(null);
    Seats.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            SeatsKeyPressed(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            SeatsKeyTyped(evt);
        }
    });

    EventsList.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null}
        },
        new String [] {
            "EventID", "EventName", "Category", "Description", "Venue", "EventDate", "TotalSeats"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false, true, true
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    EventsList.setRowHeight(60);
    EventsList.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            EventsListMouseClicked(evt);
        }
    });
    EventsList.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            EventsListKeyPressed(evt);
        }
    });
    jScrollPane2.setViewportView(EventsList);

    EventName.setBackground(new java.awt.Color(255, 255, 255));
    EventName.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
    EventName.setForeground(new java.awt.Color(102, 102, 102));
    EventName.setBorder(null);
    EventName.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            EventNameKeyPressed(evt);
        }
    });

    Separator4.setBackground(new java.awt.Color(153, 153, 153));
    Separator4.setForeground(new java.awt.Color(51, 51, 51));
    Separator4.setMaximumSize(new java.awt.Dimension(261, 24));
    Separator4.setMinimumSize(new java.awt.Dimension(261, 24));
    Separator4.setPreferredSize(new java.awt.Dimension(261, 24));

    lbl_UniversityID1.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
    lbl_UniversityID1.setForeground(new java.awt.Color(214, 48, 49));
    lbl_UniversityID1.setText("Event ID");

    EID.setEditable(false);
    EID.setBackground(new java.awt.Color(255, 255, 255));
    EID.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
    EID.setForeground(new java.awt.Color(102, 102, 102));
    EID.setBorder(null);
    EID.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            EIDKeyPressed(evt);
        }
    });

    Rate.setBackground(new java.awt.Color(255, 255, 255));
    Rate.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
    Rate.setForeground(new java.awt.Color(102, 102, 102));
    Rate.setBorder(null);
    Rate.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            RateKeyPressed(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            RateKeyTyped(evt);
        }
    });

    UniversityIDSeparator5.setBackground(new java.awt.Color(153, 153, 153));
    UniversityIDSeparator5.setForeground(new java.awt.Color(51, 51, 51));
    UniversityIDSeparator5.setMaximumSize(new java.awt.Dimension(261, 24));
    UniversityIDSeparator5.setMinimumSize(new java.awt.Dimension(261, 24));
    UniversityIDSeparator5.setPreferredSize(new java.awt.Dimension(261, 24));

    lbl_enrolledCourse2.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
    lbl_enrolledCourse2.setForeground(new java.awt.Color(214, 48, 49));
    lbl_enrolledCourse2.setText("Price Rate($)");

    javax.swing.GroupLayout AlterEventsLayout = new javax.swing.GroupLayout(AlterEvents);
    AlterEvents.setLayout(AlterEventsLayout);
    AlterEventsLayout.setHorizontalGroup(
        AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(AlterEventsLayout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblAlterEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(408, 408, 408)
            .addComponent(BackPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGroup(AlterEventsLayout.createSequentialGroup()
            .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(AlterEventsLayout.createSequentialGroup()
                    .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(AlterEventsLayout.createSequentialGroup()
                            .addGap(225, 225, 225)
                            .addComponent(lbl_validate1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(AlterEventsLayout.createSequentialGroup()
                            .addGap(59, 59, 59)
                            .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(AlterEventsLayout.createSequentialGroup()
                                    .addComponent(lbl_UniversityID1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(EID, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(AlterEventsLayout.createSequentialGroup()
                                    .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(AlterEventsLayout.createSequentialGroup()
                                            .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(lbl_Date, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lbl_Category, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lbl_Description, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lbl_Venue, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                                                .addComponent(lbl_TotalSeats, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGap(43, 43, 43))
                                        .addGroup(AlterEventsLayout.createSequentialGroup()
                                            .addComponent(lbl_EventName)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Category, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(Separator2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(Venue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(EventDate, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(Separator4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(EventName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(AlterEventsLayout.createSequentialGroup()
                                            .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(Separator3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                                .addComponent(Seats, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                                            .addComponent(lbl_enrolledCourse2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(UniversityIDSeparator5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                                .addComponent(Rate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                    .addGap(23, 23, 23))
                .addGroup(AlterEventsLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(btn_upadteEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(112, 112, 112)
                    .addComponent(btn_events, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(113, 113, 113)))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE))
    );
    AlterEventsLayout.setVerticalGroup(
        AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(AlterEventsLayout.createSequentialGroup()
            .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(BackPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(AlterEventsLayout.createSequentialGroup()
                    .addGap(11, 11, 11)
                    .addComponent(lblAlterEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane2)
                .addGroup(AlterEventsLayout.createSequentialGroup()
                    .addComponent(lbl_validate1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl_UniversityID1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(EID, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AlterEventsLayout.createSequentialGroup()
                            .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(EventName, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_EventName, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(3, 3, 3)
                            .addComponent(Separator4, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Category, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_Category, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(lbl_Description, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Venue, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_Venue, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(1, 1, 1)
                    .addComponent(Separator2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(AlterEventsLayout.createSequentialGroup()
                            .addComponent(EventDate, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(AlterEventsLayout.createSequentialGroup()
                                    .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(Seats, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbl_TotalSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(3, 3, 3)
                                    .addComponent(Separator3, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(AlterEventsLayout.createSequentialGroup()
                                    .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(Rate, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbl_enrolledCourse2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(3, 3, 3)
                                    .addComponent(UniversityIDSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(18, 18, 18)
                            .addGroup(AlterEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btn_events, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_upadteEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(lbl_Date, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(27, 27, 27))))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(AlterEvents, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(AlterEvents, javax.swing.GroupLayout.DEFAULT_SIZE, 701, Short.MAX_VALUE)
    );

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        // TODO add your handling code here:
        EventInformation();
        this.setVisible(false);
        

    }//GEN-LAST:event_minimizeMouseClicked

    private void btn_eventsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eventsActionPerformed
        
       
        
        EventDelete(); // this will delete the selected events
        DeleteSElectedBookingInfo();
        
        EventInformation(); //This will refresh the events table after deleting
       
        
    }//GEN-LAST:event_btn_eventsActionPerformed

    private void CategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CategoryActionPerformed

    private void btn_upadteEventsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_upadteEventsActionPerformed
         String EventID=EID.getText();
        conn = OracleDatabase.ConnectDb();

     
        try{
            String sql2 = "UPDATE Events SET EventsName=?,Category=?,Description=?,  Venue=?, EventDate=?, NoOfSeats=?  WHERE EventID=?";
                    
          //UPDATE Student SET Password=? WHERE UniversityID=?"
            
            pst = (OraclePreparedStatement) conn.prepareStatement(sql2);
            
            
           
            pst.setString(1,EventName.getText());
            
            String value=Category.getSelectedItem().toString();
            
            pst.setString(2, value);
            
            pst.setString(3,Description.getText());
            
            pst.setString(4,Venue.getText());
           
            pst.setString(5,EventDate.getText());
            
            
            pst.setString(6, Seats.getText());
            
             pst.setString(7, EventID);

            rs =(OracleResultSet) pst.executeQuery();

            if (rs.next())
            {
                JOptionPane.showMessageDialog(null,"Update of selected event Successful.");

                
            }

            else
            {
                JOptionPane.showMessageDialog(null,"Adding Events  Unsuccessful.Please fill the  form carefully!!");
            }

        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        
        EventInformation();
        
    }//GEN-LAST:event_btn_upadteEventsActionPerformed

    private void VenueKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_VenueKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_VenueKeyPressed

    private void SeatsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SeatsKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_SeatsKeyPressed

    private void EventNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EventNameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_EventNameKeyPressed

    private void EventsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EventsListMouseClicked
        // TODO add your handling code here:
        
        
        // get the model from the jtable
        DefaultTableModel model = (DefaultTableModel)EventsList.getModel();

        // get the selected row index
        int selectedRowIndex = EventsList.getSelectedRow();

        // set the selected row data into jtextfields
        EID.setText(model.getValueAt(selectedRowIndex, 0).toString());
        EventName.setText(model.getValueAt(selectedRowIndex, 1).toString());
        //Category.setText(model.getValueAt(selectedRowIndex, 1).toString());
        Description.setText(model.getValueAt(selectedRowIndex, 3).toString());
        Venue.setText(model.getValueAt(selectedRowIndex, 4).toString());
        Seats.setText(model.getValueAt(selectedRowIndex, 6).toString());
        Rate.setText(model.getValueAt(selectedRowIndex,7).toString());
    }//GEN-LAST:event_EventsListMouseClicked

    
    boolean row_Is_Selected=false;
    int index;
    DefaultTableModel model;
    
    
    
    private void EventsListKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EventsListKeyPressed
        
        
         // get the model from the jtable
        DefaultTableModel model = (DefaultTableModel)EventsList.getModel();

        // get the selected row index
        int selectedRowIndex = EventsList.getSelectedRow();

        // set the selected row data into jtextfields
        EventName.setText(model.getValueAt(selectedRowIndex, 1).toString());
        EID.setText(model.getValueAt(selectedRowIndex, 1).toString());
        Description.setText(model.getValueAt(selectedRowIndex, 3).toString());
        Venue.setText(model.getValueAt(selectedRowIndex, 4).toString());
        Seats.setText(model.getValueAt(selectedRowIndex, 6).toString());
    }//GEN-LAST:event_EventsListKeyPressed

    private void EIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EIDKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_EIDKeyPressed

    private void SeatsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SeatsKeyTyped
        // TODO add your handling code here:
        
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c==KeyEvent.VK_BACKSPACE) || c==KeyEvent.VK_DELETE))
        {
            
            Toolkit tk = Toolkit.getDefaultToolkit();
    tk.beep();
            
            evt.consume();
            
            
        }
    }//GEN-LAST:event_SeatsKeyTyped

    private void RateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RateKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_RateKeyPressed

    private void RateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RateKeyTyped
        // TODO add your handling code here:
        
        
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c==KeyEvent.VK_BACKSPACE) || c==KeyEvent.VK_DELETE))
        {
            
            Toolkit tk = Toolkit.getDefaultToolkit();
    tk.beep();
            
            evt.consume();
            
            
        }
    }//GEN-LAST:event_RateKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EventAlter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EventAlter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EventAlter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EventAlter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EventAlter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AlterEvents;
    private javax.swing.JPanel BackPanel;
    private javax.swing.JComboBox<String> Category;
    private javax.swing.JTextArea Description;
    private javax.swing.JTextField EID;
    private datechooser.beans.DateChooserCombo EventDate;
    private javax.swing.JTextField EventName;
    private javax.swing.JTable EventsList;
    private javax.swing.JTextField Rate;
    private javax.swing.JTextField Seats;
    private javax.swing.JSeparator Separator2;
    private javax.swing.JSeparator Separator3;
    private javax.swing.JSeparator Separator4;
    private javax.swing.JSeparator UniversityIDSeparator5;
    private javax.swing.JTextField Venue;
    private javax.swing.JButton btn_events;
    private javax.swing.JButton btn_upadteEvents;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAlterEvents;
    private javax.swing.JLabel lbl_Category;
    private javax.swing.JLabel lbl_Date;
    private javax.swing.JLabel lbl_Description;
    private javax.swing.JLabel lbl_EventName;
    private javax.swing.JLabel lbl_TotalSeats;
    private javax.swing.JLabel lbl_UniversityID1;
    private javax.swing.JLabel lbl_Venue;
    private javax.swing.JLabel lbl_enrolledCourse2;
    private javax.swing.JLabel lbl_validate1;
    private javax.swing.JLabel minimize;
    // End of variables declaration//GEN-END:variables
}
